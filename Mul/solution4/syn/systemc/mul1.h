// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _mul1_HH_
#define _mul1_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct mul1 : public sc_module {
    // Port declarations 38
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > A_address0;
    sc_out< sc_logic > A_ce0;
    sc_out< sc_logic > A_we0;
    sc_out< sc_lv<32> > A_d0;
    sc_in< sc_lv<32> > A_q0;
    sc_out< sc_lv<6> > A_address1;
    sc_out< sc_logic > A_ce1;
    sc_out< sc_logic > A_we1;
    sc_out< sc_lv<32> > A_d1;
    sc_in< sc_lv<32> > A_q1;
    sc_out< sc_lv<6> > B_address0;
    sc_out< sc_logic > B_ce0;
    sc_in< sc_lv<32> > B_q0;
    sc_out< sc_lv<6> > B_address1;
    sc_out< sc_logic > B_ce1;
    sc_in< sc_lv<32> > B_q1;
    sc_out< sc_lv<6> > C_address0;
    sc_out< sc_logic > C_ce0;
    sc_out< sc_logic > C_we0;
    sc_out< sc_lv<32> > C_d0;
    sc_in< sc_lv<32> > C_q0;
    sc_out< sc_lv<6> > C_address1;
    sc_out< sc_logic > C_ce1;
    sc_out< sc_logic > C_we1;
    sc_out< sc_lv<32> > C_d1;
    sc_in< sc_lv<32> > C_q1;
    sc_out< sc_lv<5> > sparse_new_address0;
    sc_out< sc_logic > sparse_new_ce0;
    sc_in< sc_lv<32> > sparse_new_q0;
    sc_out< sc_lv<5> > sparse_new_address1;
    sc_out< sc_logic > sparse_new_ce1;
    sc_in< sc_lv<32> > sparse_new_q1;


    // Module declarations
    mul1(sc_module_name name);
    SC_HAS_PROCESS(mul1);

    ~mul1();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > reg_242;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > reg_246;
    sc_signal< sc_lv<32> > reg_250;
    sc_signal< sc_lv<32> > reg_254;
    sc_signal< sc_lv<32> > reg_258;
    sc_signal< sc_lv<32> > reg_262;
    sc_signal< sc_lv<32> > grp_fu_266_p2;
    sc_signal< sc_lv<32> > reg_276;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > grp_fu_271_p2;
    sc_signal< sc_lv<32> > reg_280;
    sc_signal< sc_lv<32> > grp_fu_284_p2;
    sc_signal< sc_lv<32> > reg_308;
    sc_signal< sc_lv<32> > grp_fu_290_p2;
    sc_signal< sc_lv<32> > reg_313;
    sc_signal< sc_lv<32> > grp_fu_296_p2;
    sc_signal< sc_lv<32> > reg_318;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > grp_fu_302_p2;
    sc_signal< sc_lv<32> > reg_323;
    sc_signal< sc_lv<3> > i_1_fu_334_p2;
    sc_signal< sc_lv<3> > i_1_reg_583;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<6> > tmp_2_fu_356_p2;
    sc_signal< sc_lv<6> > tmp_2_reg_588;
    sc_signal< sc_lv<1> > exitcond1_fu_328_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > tmp_8_cast_fu_405_p3;
    sc_signal< sc_lv<8> > tmp_8_cast_reg_608;
    sc_signal< sc_lv<8> > tmp_17_cast_fu_441_p3;
    sc_signal< sc_lv<8> > tmp_17_cast_reg_628;
    sc_signal< sc_lv<6> > C_addr_reg_638;
    sc_signal< sc_lv<6> > C_addr_1_reg_643;
    sc_signal< sc_lv<32> > val_reg_648;
    sc_signal< sc_lv<6> > C_addr_2_reg_664;
    sc_signal< sc_lv<6> > C_addr_3_reg_669;
    sc_signal< sc_lv<6> > C_addr_4_reg_684;
    sc_signal< sc_lv<6> > C_addr_5_reg_689;
    sc_signal< sc_lv<6> > C_addr_6_reg_704;
    sc_signal< sc_lv<6> > C_addr_7_reg_709;
    sc_signal< sc_lv<3> > i_reg_231;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<64> > tmp_2_cast_fu_362_p1;
    sc_signal< sc_lv<64> > tmp_3_cast_fu_373_p1;
    sc_signal< sc_lv<64> > tmp_4_cast_fu_383_p1;
    sc_signal< sc_lv<64> > tmp_8_fu_396_p1;
    sc_signal< sc_lv<64> > tmp_9_cast_fu_419_p1;
    sc_signal< sc_lv<64> > tmp_16_fu_432_p1;
    sc_signal< sc_lv<64> > tmp_18_cast_fu_455_p1;
    sc_signal< sc_lv<64> > tmp_10_cast_fu_465_p1;
    sc_signal< sc_lv<64> > tmp_11_cast_fu_475_p1;
    sc_signal< sc_lv<64> > tmp_19_cast_fu_485_p1;
    sc_signal< sc_lv<64> > tmp_20_cast_fu_495_p1;
    sc_signal< sc_lv<64> > tmp_12_cast_fu_505_p1;
    sc_signal< sc_lv<64> > tmp_13_cast_fu_515_p1;
    sc_signal< sc_lv<64> > tmp_21_cast_fu_525_p1;
    sc_signal< sc_lv<64> > tmp_22_cast_fu_535_p1;
    sc_signal< sc_lv<64> > tmp_14_cast_fu_545_p1;
    sc_signal< sc_lv<64> > tmp_15_cast_fu_555_p1;
    sc_signal< sc_lv<64> > tmp_23_cast_fu_565_p1;
    sc_signal< sc_lv<64> > tmp_24_cast_fu_575_p1;
    sc_signal< sc_lv<5> > tmp_1_fu_344_p3;
    sc_signal< sc_lv<6> > p_shl_cast_fu_352_p1;
    sc_signal< sc_lv<6> > tmp_cast_fu_340_p1;
    sc_signal< sc_lv<6> > tmp_3_fu_367_p2;
    sc_signal< sc_lv<6> > tmp_4_fu_378_p2;
    sc_signal< sc_lv<35> > tmp_7_fu_388_p3;
    sc_signal< sc_lv<5> > tmp_fu_401_p1;
    sc_signal< sc_lv<8> > tmp_9_fu_413_p2;
    sc_signal< sc_lv<35> > tmp_15_fu_424_p3;
    sc_signal< sc_lv<5> > tmp_17_fu_437_p1;
    sc_signal< sc_lv<8> > tmp_18_fu_449_p2;
    sc_signal< sc_lv<8> > tmp_s_fu_460_p2;
    sc_signal< sc_lv<8> > tmp_10_fu_470_p2;
    sc_signal< sc_lv<8> > tmp_19_fu_480_p2;
    sc_signal< sc_lv<8> > tmp_20_fu_490_p2;
    sc_signal< sc_lv<8> > tmp_11_fu_500_p2;
    sc_signal< sc_lv<8> > tmp_12_fu_510_p2;
    sc_signal< sc_lv<8> > tmp_21_fu_520_p2;
    sc_signal< sc_lv<8> > tmp_22_fu_530_p2;
    sc_signal< sc_lv<8> > tmp_13_fu_540_p2;
    sc_signal< sc_lv<8> > tmp_14_fu_550_p2;
    sc_signal< sc_lv<8> > tmp_23_fu_560_p2;
    sc_signal< sc_lv<8> > tmp_24_fu_570_p2;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<3> ap_const_lv3_6;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<6> ap_const_lv6_2;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_3;
    static const sc_lv<8> ap_const_lv8_4;
    static const sc_lv<8> ap_const_lv8_5;
    static const sc_lv<8> ap_const_lv8_6;
    static const sc_lv<8> ap_const_lv8_7;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_address1();
    void thread_A_ce0();
    void thread_A_ce1();
    void thread_A_d0();
    void thread_A_d1();
    void thread_A_we0();
    void thread_A_we1();
    void thread_B_address0();
    void thread_B_address1();
    void thread_B_ce0();
    void thread_B_ce1();
    void thread_C_address0();
    void thread_C_address1();
    void thread_C_ce0();
    void thread_C_ce1();
    void thread_C_d0();
    void thread_C_d1();
    void thread_C_we0();
    void thread_C_we1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_328_p2();
    void thread_grp_fu_266_p2();
    void thread_grp_fu_271_p2();
    void thread_grp_fu_284_p2();
    void thread_grp_fu_290_p2();
    void thread_grp_fu_296_p2();
    void thread_grp_fu_302_p2();
    void thread_i_1_fu_334_p2();
    void thread_p_shl_cast_fu_352_p1();
    void thread_sparse_new_address0();
    void thread_sparse_new_address1();
    void thread_sparse_new_ce0();
    void thread_sparse_new_ce1();
    void thread_tmp_10_cast_fu_465_p1();
    void thread_tmp_10_fu_470_p2();
    void thread_tmp_11_cast_fu_475_p1();
    void thread_tmp_11_fu_500_p2();
    void thread_tmp_12_cast_fu_505_p1();
    void thread_tmp_12_fu_510_p2();
    void thread_tmp_13_cast_fu_515_p1();
    void thread_tmp_13_fu_540_p2();
    void thread_tmp_14_cast_fu_545_p1();
    void thread_tmp_14_fu_550_p2();
    void thread_tmp_15_cast_fu_555_p1();
    void thread_tmp_15_fu_424_p3();
    void thread_tmp_16_fu_432_p1();
    void thread_tmp_17_cast_fu_441_p3();
    void thread_tmp_17_fu_437_p1();
    void thread_tmp_18_cast_fu_455_p1();
    void thread_tmp_18_fu_449_p2();
    void thread_tmp_19_cast_fu_485_p1();
    void thread_tmp_19_fu_480_p2();
    void thread_tmp_1_fu_344_p3();
    void thread_tmp_20_cast_fu_495_p1();
    void thread_tmp_20_fu_490_p2();
    void thread_tmp_21_cast_fu_525_p1();
    void thread_tmp_21_fu_520_p2();
    void thread_tmp_22_cast_fu_535_p1();
    void thread_tmp_22_fu_530_p2();
    void thread_tmp_23_cast_fu_565_p1();
    void thread_tmp_23_fu_560_p2();
    void thread_tmp_24_cast_fu_575_p1();
    void thread_tmp_24_fu_570_p2();
    void thread_tmp_2_cast_fu_362_p1();
    void thread_tmp_2_fu_356_p2();
    void thread_tmp_3_cast_fu_373_p1();
    void thread_tmp_3_fu_367_p2();
    void thread_tmp_4_cast_fu_383_p1();
    void thread_tmp_4_fu_378_p2();
    void thread_tmp_7_fu_388_p3();
    void thread_tmp_8_cast_fu_405_p3();
    void thread_tmp_8_fu_396_p1();
    void thread_tmp_9_cast_fu_419_p1();
    void thread_tmp_9_fu_413_p2();
    void thread_tmp_cast_fu_340_p1();
    void thread_tmp_fu_401_p1();
    void thread_tmp_s_fu_460_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
