// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mul1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mul1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mul1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> mul1::ap_ST_fsm_state1 = "1";
const sc_lv<6> mul1::ap_ST_fsm_state2 = "10";
const sc_lv<6> mul1::ap_ST_fsm_state3 = "100";
const sc_lv<6> mul1::ap_ST_fsm_state4 = "1000";
const sc_lv<6> mul1::ap_ST_fsm_state5 = "10000";
const sc_lv<6> mul1::ap_ST_fsm_state6 = "100000";
const sc_lv<32> mul1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> mul1::ap_const_lv32_1 = "1";
const sc_lv<1> mul1::ap_const_lv1_0 = "0";
const sc_lv<32> mul1::ap_const_lv32_2 = "10";
const sc_lv<32> mul1::ap_const_lv32_3 = "11";
const sc_lv<32> mul1::ap_const_lv32_4 = "100";
const sc_lv<4> mul1::ap_const_lv4_0 = "0000";
const sc_lv<32> mul1::ap_const_lv32_5 = "101";
const sc_lv<4> mul1::ap_const_lv4_9 = "1001";
const sc_lv<4> mul1::ap_const_lv4_1 = "1";
const sc_lv<2> mul1::ap_const_lv2_0 = "00";
const sc_lv<6> mul1::ap_const_lv6_1 = "1";
const sc_lv<6> mul1::ap_const_lv6_2 = "10";
const sc_lv<1> mul1::ap_const_lv1_1 = "1";
const sc_lv<7> mul1::ap_const_lv7_0 = "0000000";
const bool mul1::ap_const_boolean_1 = true;

mul1::mul1(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);

    SC_METHOD(thread_A_address1);

    SC_METHOD(thread_A_ce0);

    SC_METHOD(thread_A_ce1);

    SC_METHOD(thread_A_d0);

    SC_METHOD(thread_A_d1);

    SC_METHOD(thread_A_we0);

    SC_METHOD(thread_A_we1);

    SC_METHOD(thread_B_0_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_430_p1 );

    SC_METHOD(thread_B_0_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_1_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_430_p1 );

    SC_METHOD(thread_B_1_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_2_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_430_p1 );

    SC_METHOD(thread_B_2_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_3_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_430_p1 );

    SC_METHOD(thread_B_3_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_4_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_430_p1 );

    SC_METHOD(thread_B_4_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_5_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_430_p1 );

    SC_METHOD(thread_B_5_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_6_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_430_p1 );

    SC_METHOD(thread_B_6_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_7_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_430_p1 );

    SC_METHOD(thread_B_7_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_8_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_430_p1 );

    SC_METHOD(thread_B_8_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_9_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_430_p1 );

    SC_METHOD(thread_B_9_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_C_0_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( C_0_addr_reg_709 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_fu_444_p1 );

    SC_METHOD(thread_C_0_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_0_d0);
    sensitive << ( C_0_q0 );
    sensitive << ( tmp_5_reg_704 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_0_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_1_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( C_1_addr_reg_719 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_fu_444_p1 );

    SC_METHOD(thread_C_1_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_1_d0);
    sensitive << ( C_1_q0 );
    sensitive << ( tmp_5_1_reg_714 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_1_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_2_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( C_2_addr_reg_729 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_fu_444_p1 );

    SC_METHOD(thread_C_2_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_2_d0);
    sensitive << ( C_2_q0 );
    sensitive << ( tmp_5_2_reg_724 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_2_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_3_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( C_3_addr_reg_739 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_fu_444_p1 );

    SC_METHOD(thread_C_3_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_3_d0);
    sensitive << ( C_3_q0 );
    sensitive << ( tmp_5_3_reg_734 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_3_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_4_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( C_4_addr_reg_749 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_fu_444_p1 );

    SC_METHOD(thread_C_4_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_4_d0);
    sensitive << ( C_4_q0 );
    sensitive << ( tmp_5_4_reg_744 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_4_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_5_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( C_5_addr_reg_759 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_fu_444_p1 );

    SC_METHOD(thread_C_5_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_5_d0);
    sensitive << ( C_5_q0 );
    sensitive << ( tmp_5_5_reg_754 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_5_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_6_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( C_6_addr_reg_769 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_fu_444_p1 );

    SC_METHOD(thread_C_6_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_6_d0);
    sensitive << ( C_6_q0 );
    sensitive << ( tmp_5_6_reg_764 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_6_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_7_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( C_7_addr_reg_779 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_fu_444_p1 );

    SC_METHOD(thread_C_7_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_7_d0);
    sensitive << ( C_7_q0 );
    sensitive << ( tmp_5_7_reg_774 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_7_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_8_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( C_8_addr_reg_789 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_fu_444_p1 );

    SC_METHOD(thread_C_8_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_8_d0);
    sensitive << ( C_8_q0 );
    sensitive << ( tmp_5_8_reg_784 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_8_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_9_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( C_9_addr_reg_799 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_2_fu_444_p1 );

    SC_METHOD(thread_C_9_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_9_d0);
    sensitive << ( C_9_q0 );
    sensitive << ( tmp_5_9_reg_794 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_9_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_374_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_374_p2 );

    SC_METHOD(thread_exitcond1_fu_374_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_363 );

    SC_METHOD(thread_i_1_fu_380_p2);
    sensitive << ( i_reg_363 );

    SC_METHOD(thread_sparse_new_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_4_cast_fu_404_p1 );
    sensitive << ( tmp_8_cast_fu_425_p1 );

    SC_METHOD(thread_sparse_new_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_7_cast_fu_415_p1 );

    SC_METHOD(thread_sparse_new_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_sparse_new_ce1);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_1_fu_430_p1);
    sensitive << ( sparse_new_q1 );

    SC_METHOD(thread_tmp_2_fu_444_p1);
    sensitive << ( r_reg_585 );

    SC_METHOD(thread_tmp_3_fu_390_p3);
    sensitive << ( i_reg_363 );

    SC_METHOD(thread_tmp_4_cast_fu_404_p1);
    sensitive << ( tmp_4_fu_398_p2 );

    SC_METHOD(thread_tmp_4_fu_398_p2);
    sensitive << ( tmp_3_fu_390_p3 );
    sensitive << ( tmp_cast_fu_386_p1 );

    SC_METHOD(thread_tmp_5_1_fu_461_p2);
    sensitive << ( val_reg_640 );
    sensitive << ( B_1_load_reg_659 );

    SC_METHOD(thread_tmp_5_2_fu_465_p2);
    sensitive << ( val_reg_640 );
    sensitive << ( B_2_load_reg_664 );

    SC_METHOD(thread_tmp_5_3_fu_469_p2);
    sensitive << ( val_reg_640 );
    sensitive << ( B_3_load_reg_669 );

    SC_METHOD(thread_tmp_5_4_fu_473_p2);
    sensitive << ( val_reg_640 );
    sensitive << ( B_4_load_reg_674 );

    SC_METHOD(thread_tmp_5_5_fu_477_p2);
    sensitive << ( val_reg_640 );
    sensitive << ( B_5_load_reg_679 );

    SC_METHOD(thread_tmp_5_6_fu_481_p2);
    sensitive << ( val_reg_640 );
    sensitive << ( B_6_load_reg_684 );

    SC_METHOD(thread_tmp_5_7_fu_485_p2);
    sensitive << ( val_reg_640 );
    sensitive << ( B_7_load_reg_689 );

    SC_METHOD(thread_tmp_5_8_fu_489_p2);
    sensitive << ( val_reg_640 );
    sensitive << ( B_8_load_reg_694 );

    SC_METHOD(thread_tmp_5_9_fu_493_p2);
    sensitive << ( val_reg_640 );
    sensitive << ( B_9_load_reg_699 );

    SC_METHOD(thread_tmp_5_fu_457_p2);
    sensitive << ( val_reg_640 );
    sensitive << ( B_0_load_reg_654 );

    SC_METHOD(thread_tmp_7_cast_fu_415_p1);
    sensitive << ( tmp_7_fu_409_p2 );

    SC_METHOD(thread_tmp_7_fu_409_p2);
    sensitive << ( tmp_4_fu_398_p2 );

    SC_METHOD(thread_tmp_8_cast_fu_425_p1);
    sensitive << ( tmp_8_fu_420_p2 );

    SC_METHOD(thread_tmp_8_fu_420_p2);
    sensitive << ( tmp_4_reg_565 );

    SC_METHOD(thread_tmp_cast_fu_386_p1);
    sensitive << ( i_reg_363 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_374_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mul1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_we0, "(port)A_we0");
    sc_trace(mVcdFile, A_d0, "(port)A_d0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, A_address1, "(port)A_address1");
    sc_trace(mVcdFile, A_ce1, "(port)A_ce1");
    sc_trace(mVcdFile, A_we1, "(port)A_we1");
    sc_trace(mVcdFile, A_d1, "(port)A_d1");
    sc_trace(mVcdFile, A_q1, "(port)A_q1");
    sc_trace(mVcdFile, B_0_address0, "(port)B_0_address0");
    sc_trace(mVcdFile, B_0_ce0, "(port)B_0_ce0");
    sc_trace(mVcdFile, B_0_q0, "(port)B_0_q0");
    sc_trace(mVcdFile, B_1_address0, "(port)B_1_address0");
    sc_trace(mVcdFile, B_1_ce0, "(port)B_1_ce0");
    sc_trace(mVcdFile, B_1_q0, "(port)B_1_q0");
    sc_trace(mVcdFile, B_2_address0, "(port)B_2_address0");
    sc_trace(mVcdFile, B_2_ce0, "(port)B_2_ce0");
    sc_trace(mVcdFile, B_2_q0, "(port)B_2_q0");
    sc_trace(mVcdFile, B_3_address0, "(port)B_3_address0");
    sc_trace(mVcdFile, B_3_ce0, "(port)B_3_ce0");
    sc_trace(mVcdFile, B_3_q0, "(port)B_3_q0");
    sc_trace(mVcdFile, B_4_address0, "(port)B_4_address0");
    sc_trace(mVcdFile, B_4_ce0, "(port)B_4_ce0");
    sc_trace(mVcdFile, B_4_q0, "(port)B_4_q0");
    sc_trace(mVcdFile, B_5_address0, "(port)B_5_address0");
    sc_trace(mVcdFile, B_5_ce0, "(port)B_5_ce0");
    sc_trace(mVcdFile, B_5_q0, "(port)B_5_q0");
    sc_trace(mVcdFile, B_6_address0, "(port)B_6_address0");
    sc_trace(mVcdFile, B_6_ce0, "(port)B_6_ce0");
    sc_trace(mVcdFile, B_6_q0, "(port)B_6_q0");
    sc_trace(mVcdFile, B_7_address0, "(port)B_7_address0");
    sc_trace(mVcdFile, B_7_ce0, "(port)B_7_ce0");
    sc_trace(mVcdFile, B_7_q0, "(port)B_7_q0");
    sc_trace(mVcdFile, B_8_address0, "(port)B_8_address0");
    sc_trace(mVcdFile, B_8_ce0, "(port)B_8_ce0");
    sc_trace(mVcdFile, B_8_q0, "(port)B_8_q0");
    sc_trace(mVcdFile, B_9_address0, "(port)B_9_address0");
    sc_trace(mVcdFile, B_9_ce0, "(port)B_9_ce0");
    sc_trace(mVcdFile, B_9_q0, "(port)B_9_q0");
    sc_trace(mVcdFile, C_0_address0, "(port)C_0_address0");
    sc_trace(mVcdFile, C_0_ce0, "(port)C_0_ce0");
    sc_trace(mVcdFile, C_0_we0, "(port)C_0_we0");
    sc_trace(mVcdFile, C_0_d0, "(port)C_0_d0");
    sc_trace(mVcdFile, C_0_q0, "(port)C_0_q0");
    sc_trace(mVcdFile, C_1_address0, "(port)C_1_address0");
    sc_trace(mVcdFile, C_1_ce0, "(port)C_1_ce0");
    sc_trace(mVcdFile, C_1_we0, "(port)C_1_we0");
    sc_trace(mVcdFile, C_1_d0, "(port)C_1_d0");
    sc_trace(mVcdFile, C_1_q0, "(port)C_1_q0");
    sc_trace(mVcdFile, C_2_address0, "(port)C_2_address0");
    sc_trace(mVcdFile, C_2_ce0, "(port)C_2_ce0");
    sc_trace(mVcdFile, C_2_we0, "(port)C_2_we0");
    sc_trace(mVcdFile, C_2_d0, "(port)C_2_d0");
    sc_trace(mVcdFile, C_2_q0, "(port)C_2_q0");
    sc_trace(mVcdFile, C_3_address0, "(port)C_3_address0");
    sc_trace(mVcdFile, C_3_ce0, "(port)C_3_ce0");
    sc_trace(mVcdFile, C_3_we0, "(port)C_3_we0");
    sc_trace(mVcdFile, C_3_d0, "(port)C_3_d0");
    sc_trace(mVcdFile, C_3_q0, "(port)C_3_q0");
    sc_trace(mVcdFile, C_4_address0, "(port)C_4_address0");
    sc_trace(mVcdFile, C_4_ce0, "(port)C_4_ce0");
    sc_trace(mVcdFile, C_4_we0, "(port)C_4_we0");
    sc_trace(mVcdFile, C_4_d0, "(port)C_4_d0");
    sc_trace(mVcdFile, C_4_q0, "(port)C_4_q0");
    sc_trace(mVcdFile, C_5_address0, "(port)C_5_address0");
    sc_trace(mVcdFile, C_5_ce0, "(port)C_5_ce0");
    sc_trace(mVcdFile, C_5_we0, "(port)C_5_we0");
    sc_trace(mVcdFile, C_5_d0, "(port)C_5_d0");
    sc_trace(mVcdFile, C_5_q0, "(port)C_5_q0");
    sc_trace(mVcdFile, C_6_address0, "(port)C_6_address0");
    sc_trace(mVcdFile, C_6_ce0, "(port)C_6_ce0");
    sc_trace(mVcdFile, C_6_we0, "(port)C_6_we0");
    sc_trace(mVcdFile, C_6_d0, "(port)C_6_d0");
    sc_trace(mVcdFile, C_6_q0, "(port)C_6_q0");
    sc_trace(mVcdFile, C_7_address0, "(port)C_7_address0");
    sc_trace(mVcdFile, C_7_ce0, "(port)C_7_ce0");
    sc_trace(mVcdFile, C_7_we0, "(port)C_7_we0");
    sc_trace(mVcdFile, C_7_d0, "(port)C_7_d0");
    sc_trace(mVcdFile, C_7_q0, "(port)C_7_q0");
    sc_trace(mVcdFile, C_8_address0, "(port)C_8_address0");
    sc_trace(mVcdFile, C_8_ce0, "(port)C_8_ce0");
    sc_trace(mVcdFile, C_8_we0, "(port)C_8_we0");
    sc_trace(mVcdFile, C_8_d0, "(port)C_8_d0");
    sc_trace(mVcdFile, C_8_q0, "(port)C_8_q0");
    sc_trace(mVcdFile, C_9_address0, "(port)C_9_address0");
    sc_trace(mVcdFile, C_9_ce0, "(port)C_9_ce0");
    sc_trace(mVcdFile, C_9_we0, "(port)C_9_we0");
    sc_trace(mVcdFile, C_9_d0, "(port)C_9_d0");
    sc_trace(mVcdFile, C_9_q0, "(port)C_9_q0");
    sc_trace(mVcdFile, sparse_new_address0, "(port)sparse_new_address0");
    sc_trace(mVcdFile, sparse_new_ce0, "(port)sparse_new_ce0");
    sc_trace(mVcdFile, sparse_new_q0, "(port)sparse_new_q0");
    sc_trace(mVcdFile, sparse_new_address1, "(port)sparse_new_address1");
    sc_trace(mVcdFile, sparse_new_ce1, "(port)sparse_new_ce1");
    sc_trace(mVcdFile, sparse_new_q1, "(port)sparse_new_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_1_fu_380_p2, "i_1_fu_380_p2");
    sc_trace(mVcdFile, i_1_reg_560, "i_1_reg_560");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_4_fu_398_p2, "tmp_4_fu_398_p2");
    sc_trace(mVcdFile, tmp_4_reg_565, "tmp_4_reg_565");
    sc_trace(mVcdFile, exitcond1_fu_374_p2, "exitcond1_fu_374_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, r_reg_585, "r_reg_585");
    sc_trace(mVcdFile, val_reg_640, "val_reg_640");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, B_0_load_reg_654, "B_0_load_reg_654");
    sc_trace(mVcdFile, B_1_load_reg_659, "B_1_load_reg_659");
    sc_trace(mVcdFile, B_2_load_reg_664, "B_2_load_reg_664");
    sc_trace(mVcdFile, B_3_load_reg_669, "B_3_load_reg_669");
    sc_trace(mVcdFile, B_4_load_reg_674, "B_4_load_reg_674");
    sc_trace(mVcdFile, B_5_load_reg_679, "B_5_load_reg_679");
    sc_trace(mVcdFile, B_6_load_reg_684, "B_6_load_reg_684");
    sc_trace(mVcdFile, B_7_load_reg_689, "B_7_load_reg_689");
    sc_trace(mVcdFile, B_8_load_reg_694, "B_8_load_reg_694");
    sc_trace(mVcdFile, B_9_load_reg_699, "B_9_load_reg_699");
    sc_trace(mVcdFile, tmp_5_fu_457_p2, "tmp_5_fu_457_p2");
    sc_trace(mVcdFile, tmp_5_reg_704, "tmp_5_reg_704");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, C_0_addr_reg_709, "C_0_addr_reg_709");
    sc_trace(mVcdFile, tmp_5_1_fu_461_p2, "tmp_5_1_fu_461_p2");
    sc_trace(mVcdFile, tmp_5_1_reg_714, "tmp_5_1_reg_714");
    sc_trace(mVcdFile, C_1_addr_reg_719, "C_1_addr_reg_719");
    sc_trace(mVcdFile, tmp_5_2_fu_465_p2, "tmp_5_2_fu_465_p2");
    sc_trace(mVcdFile, tmp_5_2_reg_724, "tmp_5_2_reg_724");
    sc_trace(mVcdFile, C_2_addr_reg_729, "C_2_addr_reg_729");
    sc_trace(mVcdFile, tmp_5_3_fu_469_p2, "tmp_5_3_fu_469_p2");
    sc_trace(mVcdFile, tmp_5_3_reg_734, "tmp_5_3_reg_734");
    sc_trace(mVcdFile, C_3_addr_reg_739, "C_3_addr_reg_739");
    sc_trace(mVcdFile, tmp_5_4_fu_473_p2, "tmp_5_4_fu_473_p2");
    sc_trace(mVcdFile, tmp_5_4_reg_744, "tmp_5_4_reg_744");
    sc_trace(mVcdFile, C_4_addr_reg_749, "C_4_addr_reg_749");
    sc_trace(mVcdFile, tmp_5_5_fu_477_p2, "tmp_5_5_fu_477_p2");
    sc_trace(mVcdFile, tmp_5_5_reg_754, "tmp_5_5_reg_754");
    sc_trace(mVcdFile, C_5_addr_reg_759, "C_5_addr_reg_759");
    sc_trace(mVcdFile, tmp_5_6_fu_481_p2, "tmp_5_6_fu_481_p2");
    sc_trace(mVcdFile, tmp_5_6_reg_764, "tmp_5_6_reg_764");
    sc_trace(mVcdFile, C_6_addr_reg_769, "C_6_addr_reg_769");
    sc_trace(mVcdFile, tmp_5_7_fu_485_p2, "tmp_5_7_fu_485_p2");
    sc_trace(mVcdFile, tmp_5_7_reg_774, "tmp_5_7_reg_774");
    sc_trace(mVcdFile, C_7_addr_reg_779, "C_7_addr_reg_779");
    sc_trace(mVcdFile, tmp_5_8_fu_489_p2, "tmp_5_8_fu_489_p2");
    sc_trace(mVcdFile, tmp_5_8_reg_784, "tmp_5_8_reg_784");
    sc_trace(mVcdFile, C_8_addr_reg_789, "C_8_addr_reg_789");
    sc_trace(mVcdFile, tmp_5_9_fu_493_p2, "tmp_5_9_fu_493_p2");
    sc_trace(mVcdFile, tmp_5_9_reg_794, "tmp_5_9_reg_794");
    sc_trace(mVcdFile, C_9_addr_reg_799, "C_9_addr_reg_799");
    sc_trace(mVcdFile, i_reg_363, "i_reg_363");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_4_cast_fu_404_p1, "tmp_4_cast_fu_404_p1");
    sc_trace(mVcdFile, tmp_7_cast_fu_415_p1, "tmp_7_cast_fu_415_p1");
    sc_trace(mVcdFile, tmp_8_cast_fu_425_p1, "tmp_8_cast_fu_425_p1");
    sc_trace(mVcdFile, tmp_1_fu_430_p1, "tmp_1_fu_430_p1");
    sc_trace(mVcdFile, tmp_2_fu_444_p1, "tmp_2_fu_444_p1");
    sc_trace(mVcdFile, tmp_3_fu_390_p3, "tmp_3_fu_390_p3");
    sc_trace(mVcdFile, tmp_cast_fu_386_p1, "tmp_cast_fu_386_p1");
    sc_trace(mVcdFile, tmp_7_fu_409_p2, "tmp_7_fu_409_p2");
    sc_trace(mVcdFile, tmp_8_fu_420_p2, "tmp_8_fu_420_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("mul1.hdltvin.dat");
    mHdltvoutHandle.open("mul1.hdltvout.dat");
}

mul1::~mul1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void mul1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_reg_363 = i_1_reg_560.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_363 = ap_const_lv4_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        B_0_load_reg_654 = B_0_q0.read();
        B_1_load_reg_659 = B_1_q0.read();
        B_2_load_reg_664 = B_2_q0.read();
        B_3_load_reg_669 = B_3_q0.read();
        B_4_load_reg_674 = B_4_q0.read();
        B_5_load_reg_679 = B_5_q0.read();
        B_6_load_reg_684 = B_6_q0.read();
        B_7_load_reg_689 = B_7_q0.read();
        B_8_load_reg_694 = B_8_q0.read();
        B_9_load_reg_699 = B_9_q0.read();
        val_reg_640 = sparse_new_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        C_0_addr_reg_709 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
        C_1_addr_reg_719 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
        C_2_addr_reg_729 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
        C_3_addr_reg_739 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
        C_4_addr_reg_749 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
        C_5_addr_reg_759 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
        C_6_addr_reg_769 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
        C_7_addr_reg_779 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
        C_8_addr_reg_789 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
        C_9_addr_reg_799 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
        tmp_5_1_reg_714 = tmp_5_1_fu_461_p2.read();
        tmp_5_2_reg_724 = tmp_5_2_fu_465_p2.read();
        tmp_5_3_reg_734 = tmp_5_3_fu_469_p2.read();
        tmp_5_4_reg_744 = tmp_5_4_fu_473_p2.read();
        tmp_5_5_reg_754 = tmp_5_5_fu_477_p2.read();
        tmp_5_6_reg_764 = tmp_5_6_fu_481_p2.read();
        tmp_5_7_reg_774 = tmp_5_7_fu_485_p2.read();
        tmp_5_8_reg_784 = tmp_5_8_fu_489_p2.read();
        tmp_5_9_reg_794 = tmp_5_9_fu_493_p2.read();
        tmp_5_reg_704 = tmp_5_fu_457_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_560 = i_1_fu_380_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        r_reg_585 = sparse_new_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_374_p2.read(), ap_const_lv1_0))) {
        tmp_4_reg_565 = tmp_4_fu_398_p2.read();
    }
}

void mul1::thread_A_address0() {
    A_address0 = ap_const_lv7_0;
}

void mul1::thread_A_address1() {
    A_address1 = ap_const_lv7_0;
}

void mul1::thread_A_ce0() {
    A_ce0 = ap_const_logic_0;
}

void mul1::thread_A_ce1() {
    A_ce1 = ap_const_logic_0;
}

void mul1::thread_A_d0() {
    A_d0 = ap_const_lv32_0;
}

void mul1::thread_A_d1() {
    A_d1 = ap_const_lv32_0;
}

void mul1::thread_A_we0() {
    A_we0 = ap_const_logic_0;
}

void mul1::thread_A_we1() {
    A_we1 = ap_const_logic_0;
}

void mul1::thread_B_0_address0() {
    B_0_address0 =  (sc_lv<4>) (tmp_1_fu_430_p1.read());
}

void mul1::thread_B_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_0_ce0 = ap_const_logic_1;
    } else {
        B_0_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_B_1_address0() {
    B_1_address0 =  (sc_lv<4>) (tmp_1_fu_430_p1.read());
}

void mul1::thread_B_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_1_ce0 = ap_const_logic_1;
    } else {
        B_1_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_B_2_address0() {
    B_2_address0 =  (sc_lv<4>) (tmp_1_fu_430_p1.read());
}

void mul1::thread_B_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_2_ce0 = ap_const_logic_1;
    } else {
        B_2_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_B_3_address0() {
    B_3_address0 =  (sc_lv<4>) (tmp_1_fu_430_p1.read());
}

void mul1::thread_B_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_3_ce0 = ap_const_logic_1;
    } else {
        B_3_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_B_4_address0() {
    B_4_address0 =  (sc_lv<4>) (tmp_1_fu_430_p1.read());
}

void mul1::thread_B_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_4_ce0 = ap_const_logic_1;
    } else {
        B_4_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_B_5_address0() {
    B_5_address0 =  (sc_lv<4>) (tmp_1_fu_430_p1.read());
}

void mul1::thread_B_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_5_ce0 = ap_const_logic_1;
    } else {
        B_5_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_B_6_address0() {
    B_6_address0 =  (sc_lv<4>) (tmp_1_fu_430_p1.read());
}

void mul1::thread_B_6_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_6_ce0 = ap_const_logic_1;
    } else {
        B_6_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_B_7_address0() {
    B_7_address0 =  (sc_lv<4>) (tmp_1_fu_430_p1.read());
}

void mul1::thread_B_7_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_7_ce0 = ap_const_logic_1;
    } else {
        B_7_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_B_8_address0() {
    B_8_address0 =  (sc_lv<4>) (tmp_1_fu_430_p1.read());
}

void mul1::thread_B_8_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_8_ce0 = ap_const_logic_1;
    } else {
        B_8_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_B_9_address0() {
    B_9_address0 =  (sc_lv<4>) (tmp_1_fu_430_p1.read());
}

void mul1::thread_B_9_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_9_ce0 = ap_const_logic_1;
    } else {
        B_9_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_0_address0 = C_0_addr_reg_709.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        C_0_address0 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
    } else {
        C_0_address0 = "XXXX";
    }
}

void mul1::thread_C_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        C_0_ce0 = ap_const_logic_1;
    } else {
        C_0_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_0_d0() {
    C_0_d0 = (!tmp_5_reg_704.read().is_01() || !C_0_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_reg_704.read()) + sc_biguint<32>(C_0_q0.read()));
}

void mul1::thread_C_0_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_0_we0 = ap_const_logic_1;
    } else {
        C_0_we0 = ap_const_logic_0;
    }
}

void mul1::thread_C_1_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_1_address0 = C_1_addr_reg_719.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        C_1_address0 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
    } else {
        C_1_address0 = "XXXX";
    }
}

void mul1::thread_C_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        C_1_ce0 = ap_const_logic_1;
    } else {
        C_1_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_1_d0() {
    C_1_d0 = (!tmp_5_1_reg_714.read().is_01() || !C_1_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_1_reg_714.read()) + sc_biguint<32>(C_1_q0.read()));
}

void mul1::thread_C_1_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_1_we0 = ap_const_logic_1;
    } else {
        C_1_we0 = ap_const_logic_0;
    }
}

void mul1::thread_C_2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_2_address0 = C_2_addr_reg_729.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        C_2_address0 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
    } else {
        C_2_address0 = "XXXX";
    }
}

void mul1::thread_C_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        C_2_ce0 = ap_const_logic_1;
    } else {
        C_2_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_2_d0() {
    C_2_d0 = (!tmp_5_2_reg_724.read().is_01() || !C_2_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_2_reg_724.read()) + sc_biguint<32>(C_2_q0.read()));
}

void mul1::thread_C_2_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_2_we0 = ap_const_logic_1;
    } else {
        C_2_we0 = ap_const_logic_0;
    }
}

void mul1::thread_C_3_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_3_address0 = C_3_addr_reg_739.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        C_3_address0 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
    } else {
        C_3_address0 = "XXXX";
    }
}

void mul1::thread_C_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        C_3_ce0 = ap_const_logic_1;
    } else {
        C_3_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_3_d0() {
    C_3_d0 = (!tmp_5_3_reg_734.read().is_01() || !C_3_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_3_reg_734.read()) + sc_biguint<32>(C_3_q0.read()));
}

void mul1::thread_C_3_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_3_we0 = ap_const_logic_1;
    } else {
        C_3_we0 = ap_const_logic_0;
    }
}

void mul1::thread_C_4_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_4_address0 = C_4_addr_reg_749.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        C_4_address0 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
    } else {
        C_4_address0 = "XXXX";
    }
}

void mul1::thread_C_4_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        C_4_ce0 = ap_const_logic_1;
    } else {
        C_4_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_4_d0() {
    C_4_d0 = (!tmp_5_4_reg_744.read().is_01() || !C_4_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_4_reg_744.read()) + sc_biguint<32>(C_4_q0.read()));
}

void mul1::thread_C_4_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_4_we0 = ap_const_logic_1;
    } else {
        C_4_we0 = ap_const_logic_0;
    }
}

void mul1::thread_C_5_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_5_address0 = C_5_addr_reg_759.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        C_5_address0 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
    } else {
        C_5_address0 = "XXXX";
    }
}

void mul1::thread_C_5_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        C_5_ce0 = ap_const_logic_1;
    } else {
        C_5_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_5_d0() {
    C_5_d0 = (!tmp_5_5_reg_754.read().is_01() || !C_5_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_5_reg_754.read()) + sc_biguint<32>(C_5_q0.read()));
}

void mul1::thread_C_5_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_5_we0 = ap_const_logic_1;
    } else {
        C_5_we0 = ap_const_logic_0;
    }
}

void mul1::thread_C_6_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_6_address0 = C_6_addr_reg_769.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        C_6_address0 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
    } else {
        C_6_address0 = "XXXX";
    }
}

void mul1::thread_C_6_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        C_6_ce0 = ap_const_logic_1;
    } else {
        C_6_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_6_d0() {
    C_6_d0 = (!tmp_5_6_reg_764.read().is_01() || !C_6_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_6_reg_764.read()) + sc_biguint<32>(C_6_q0.read()));
}

void mul1::thread_C_6_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_6_we0 = ap_const_logic_1;
    } else {
        C_6_we0 = ap_const_logic_0;
    }
}

void mul1::thread_C_7_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_7_address0 = C_7_addr_reg_779.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        C_7_address0 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
    } else {
        C_7_address0 = "XXXX";
    }
}

void mul1::thread_C_7_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        C_7_ce0 = ap_const_logic_1;
    } else {
        C_7_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_7_d0() {
    C_7_d0 = (!tmp_5_7_reg_774.read().is_01() || !C_7_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_7_reg_774.read()) + sc_biguint<32>(C_7_q0.read()));
}

void mul1::thread_C_7_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_7_we0 = ap_const_logic_1;
    } else {
        C_7_we0 = ap_const_logic_0;
    }
}

void mul1::thread_C_8_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_8_address0 = C_8_addr_reg_789.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        C_8_address0 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
    } else {
        C_8_address0 = "XXXX";
    }
}

void mul1::thread_C_8_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        C_8_ce0 = ap_const_logic_1;
    } else {
        C_8_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_8_d0() {
    C_8_d0 = (!tmp_5_8_reg_784.read().is_01() || !C_8_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_8_reg_784.read()) + sc_biguint<32>(C_8_q0.read()));
}

void mul1::thread_C_8_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_8_we0 = ap_const_logic_1;
    } else {
        C_8_we0 = ap_const_logic_0;
    }
}

void mul1::thread_C_9_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_9_address0 = C_9_addr_reg_799.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        C_9_address0 =  (sc_lv<4>) (tmp_2_fu_444_p1.read());
    } else {
        C_9_address0 = "XXXX";
    }
}

void mul1::thread_C_9_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        C_9_ce0 = ap_const_logic_1;
    } else {
        C_9_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_9_d0() {
    C_9_d0 = (!tmp_5_9_reg_794.read().is_01() || !C_9_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_9_reg_794.read()) + sc_biguint<32>(C_9_q0.read()));
}

void mul1::thread_C_9_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_9_we0 = ap_const_logic_1;
    } else {
        C_9_we0 = ap_const_logic_0;
    }
}

void mul1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void mul1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void mul1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void mul1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void mul1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void mul1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void mul1::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_374_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void mul1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void mul1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_374_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void mul1::thread_exitcond1_fu_374_p2() {
    exitcond1_fu_374_p2 = (!i_reg_363.read().is_01() || !ap_const_lv4_9.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_363.read() == ap_const_lv4_9);
}

void mul1::thread_i_1_fu_380_p2() {
    i_1_fu_380_p2 = (!i_reg_363.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(i_reg_363.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void mul1::thread_sparse_new_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sparse_new_address0 =  (sc_lv<5>) (tmp_8_cast_fu_425_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sparse_new_address0 =  (sc_lv<5>) (tmp_4_cast_fu_404_p1.read());
    } else {
        sparse_new_address0 =  (sc_lv<5>) ("XXXXX");
    }
}

void mul1::thread_sparse_new_address1() {
    sparse_new_address1 =  (sc_lv<5>) (tmp_7_cast_fu_415_p1.read());
}

void mul1::thread_sparse_new_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        sparse_new_ce0 = ap_const_logic_1;
    } else {
        sparse_new_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_sparse_new_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sparse_new_ce1 = ap_const_logic_1;
    } else {
        sparse_new_ce1 = ap_const_logic_0;
    }
}

void mul1::thread_tmp_1_fu_430_p1() {
    tmp_1_fu_430_p1 = esl_sext<64,32>(sparse_new_q1.read());
}

void mul1::thread_tmp_2_fu_444_p1() {
    tmp_2_fu_444_p1 = esl_sext<64,32>(r_reg_585.read());
}

void mul1::thread_tmp_3_fu_390_p3() {
    tmp_3_fu_390_p3 = esl_concat<4,2>(i_reg_363.read(), ap_const_lv2_0);
}

void mul1::thread_tmp_4_cast_fu_404_p1() {
    tmp_4_cast_fu_404_p1 = esl_sext<64,6>(tmp_4_fu_398_p2.read());
}

void mul1::thread_tmp_4_fu_398_p2() {
    tmp_4_fu_398_p2 = (!tmp_3_fu_390_p3.read().is_01() || !tmp_cast_fu_386_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(tmp_3_fu_390_p3.read()) - sc_biguint<6>(tmp_cast_fu_386_p1.read()));
}

void mul1::thread_tmp_5_1_fu_461_p2() {
    tmp_5_1_fu_461_p2 = (!B_1_load_reg_659.read().is_01() || !val_reg_640.read().is_01())? sc_lv<32>(): sc_bigint<32>(B_1_load_reg_659.read()) * sc_bigint<32>(val_reg_640.read());
}

void mul1::thread_tmp_5_2_fu_465_p2() {
    tmp_5_2_fu_465_p2 = (!B_2_load_reg_664.read().is_01() || !val_reg_640.read().is_01())? sc_lv<32>(): sc_bigint<32>(B_2_load_reg_664.read()) * sc_bigint<32>(val_reg_640.read());
}

void mul1::thread_tmp_5_3_fu_469_p2() {
    tmp_5_3_fu_469_p2 = (!B_3_load_reg_669.read().is_01() || !val_reg_640.read().is_01())? sc_lv<32>(): sc_bigint<32>(B_3_load_reg_669.read()) * sc_bigint<32>(val_reg_640.read());
}

void mul1::thread_tmp_5_4_fu_473_p2() {
    tmp_5_4_fu_473_p2 = (!B_4_load_reg_674.read().is_01() || !val_reg_640.read().is_01())? sc_lv<32>(): sc_bigint<32>(B_4_load_reg_674.read()) * sc_bigint<32>(val_reg_640.read());
}

void mul1::thread_tmp_5_5_fu_477_p2() {
    tmp_5_5_fu_477_p2 = (!B_5_load_reg_679.read().is_01() || !val_reg_640.read().is_01())? sc_lv<32>(): sc_bigint<32>(B_5_load_reg_679.read()) * sc_bigint<32>(val_reg_640.read());
}

void mul1::thread_tmp_5_6_fu_481_p2() {
    tmp_5_6_fu_481_p2 = (!B_6_load_reg_684.read().is_01() || !val_reg_640.read().is_01())? sc_lv<32>(): sc_bigint<32>(B_6_load_reg_684.read()) * sc_bigint<32>(val_reg_640.read());
}

void mul1::thread_tmp_5_7_fu_485_p2() {
    tmp_5_7_fu_485_p2 = (!B_7_load_reg_689.read().is_01() || !val_reg_640.read().is_01())? sc_lv<32>(): sc_bigint<32>(B_7_load_reg_689.read()) * sc_bigint<32>(val_reg_640.read());
}

void mul1::thread_tmp_5_8_fu_489_p2() {
    tmp_5_8_fu_489_p2 = (!B_8_load_reg_694.read().is_01() || !val_reg_640.read().is_01())? sc_lv<32>(): sc_bigint<32>(B_8_load_reg_694.read()) * sc_bigint<32>(val_reg_640.read());
}

void mul1::thread_tmp_5_9_fu_493_p2() {
    tmp_5_9_fu_493_p2 = (!B_9_load_reg_699.read().is_01() || !val_reg_640.read().is_01())? sc_lv<32>(): sc_bigint<32>(B_9_load_reg_699.read()) * sc_bigint<32>(val_reg_640.read());
}

void mul1::thread_tmp_5_fu_457_p2() {
    tmp_5_fu_457_p2 = (!B_0_load_reg_654.read().is_01() || !val_reg_640.read().is_01())? sc_lv<32>(): sc_bigint<32>(B_0_load_reg_654.read()) * sc_bigint<32>(val_reg_640.read());
}

void mul1::thread_tmp_7_cast_fu_415_p1() {
    tmp_7_cast_fu_415_p1 = esl_sext<64,6>(tmp_7_fu_409_p2.read());
}

void mul1::thread_tmp_7_fu_409_p2() {
    tmp_7_fu_409_p2 = (!tmp_4_fu_398_p2.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_bigint<6>(tmp_4_fu_398_p2.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void mul1::thread_tmp_8_cast_fu_425_p1() {
    tmp_8_cast_fu_425_p1 = esl_sext<64,6>(tmp_8_fu_420_p2.read());
}

void mul1::thread_tmp_8_fu_420_p2() {
    tmp_8_fu_420_p2 = (!tmp_4_reg_565.read().is_01() || !ap_const_lv6_2.is_01())? sc_lv<6>(): (sc_bigint<6>(tmp_4_reg_565.read()) + sc_biguint<6>(ap_const_lv6_2));
}

void mul1::thread_tmp_cast_fu_386_p1() {
    tmp_cast_fu_386_p1 = esl_zext<6,4>(i_reg_363.read());
}

void mul1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_374_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

void mul1::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address0\" :  \"" << A_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce0\" :  \"" << A_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_we0\" :  \"" << A_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_d0\" :  \"" << A_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q0\" :  \"" << A_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address1\" :  \"" << A_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce1\" :  \"" << A_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_we1\" :  \"" << A_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_d1\" :  \"" << A_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q1\" :  \"" << A_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_0_address0\" :  \"" << B_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_0_ce0\" :  \"" << B_0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_0_q0\" :  \"" << B_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_1_address0\" :  \"" << B_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_1_ce0\" :  \"" << B_1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_1_q0\" :  \"" << B_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_2_address0\" :  \"" << B_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_2_ce0\" :  \"" << B_2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_2_q0\" :  \"" << B_2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_3_address0\" :  \"" << B_3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_3_ce0\" :  \"" << B_3_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_3_q0\" :  \"" << B_3_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_4_address0\" :  \"" << B_4_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_4_ce0\" :  \"" << B_4_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_4_q0\" :  \"" << B_4_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_5_address0\" :  \"" << B_5_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_5_ce0\" :  \"" << B_5_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_5_q0\" :  \"" << B_5_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_6_address0\" :  \"" << B_6_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_6_ce0\" :  \"" << B_6_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_6_q0\" :  \"" << B_6_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_7_address0\" :  \"" << B_7_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_7_ce0\" :  \"" << B_7_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_7_q0\" :  \"" << B_7_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_8_address0\" :  \"" << B_8_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_8_ce0\" :  \"" << B_8_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_8_q0\" :  \"" << B_8_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_9_address0\" :  \"" << B_9_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_9_ce0\" :  \"" << B_9_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_9_q0\" :  \"" << B_9_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_0_address0\" :  \"" << C_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_0_ce0\" :  \"" << C_0_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_0_we0\" :  \"" << C_0_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_0_d0\" :  \"" << C_0_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_0_q0\" :  \"" << C_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_1_address0\" :  \"" << C_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_1_ce0\" :  \"" << C_1_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_1_we0\" :  \"" << C_1_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_1_d0\" :  \"" << C_1_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_1_q0\" :  \"" << C_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_2_address0\" :  \"" << C_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_2_ce0\" :  \"" << C_2_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_2_we0\" :  \"" << C_2_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_2_d0\" :  \"" << C_2_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_2_q0\" :  \"" << C_2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_3_address0\" :  \"" << C_3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_3_ce0\" :  \"" << C_3_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_3_we0\" :  \"" << C_3_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_3_d0\" :  \"" << C_3_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_3_q0\" :  \"" << C_3_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_4_address0\" :  \"" << C_4_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_4_ce0\" :  \"" << C_4_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_4_we0\" :  \"" << C_4_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_4_d0\" :  \"" << C_4_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_4_q0\" :  \"" << C_4_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_5_address0\" :  \"" << C_5_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_5_ce0\" :  \"" << C_5_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_5_we0\" :  \"" << C_5_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_5_d0\" :  \"" << C_5_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_5_q0\" :  \"" << C_5_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_6_address0\" :  \"" << C_6_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_6_ce0\" :  \"" << C_6_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_6_we0\" :  \"" << C_6_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_6_d0\" :  \"" << C_6_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_6_q0\" :  \"" << C_6_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_7_address0\" :  \"" << C_7_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_7_ce0\" :  \"" << C_7_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_7_we0\" :  \"" << C_7_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_7_d0\" :  \"" << C_7_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_7_q0\" :  \"" << C_7_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_8_address0\" :  \"" << C_8_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_8_ce0\" :  \"" << C_8_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_8_we0\" :  \"" << C_8_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_8_d0\" :  \"" << C_8_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_8_q0\" :  \"" << C_8_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_9_address0\" :  \"" << C_9_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_9_ce0\" :  \"" << C_9_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_9_we0\" :  \"" << C_9_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_9_d0\" :  \"" << C_9_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_9_q0\" :  \"" << C_9_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sparse_new_address0\" :  \"" << sparse_new_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sparse_new_ce0\" :  \"" << sparse_new_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sparse_new_q0\" :  \"" << sparse_new_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sparse_new_address1\" :  \"" << sparse_new_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sparse_new_ce1\" :  \"" << sparse_new_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sparse_new_q1\" :  \"" << sparse_new_q1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

