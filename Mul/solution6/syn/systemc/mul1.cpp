// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "mul1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic mul1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic mul1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> mul1::ap_ST_fsm_state1 = "1";
const sc_lv<6> mul1::ap_ST_fsm_state2 = "10";
const sc_lv<6> mul1::ap_ST_fsm_state3 = "100";
const sc_lv<6> mul1::ap_ST_fsm_state4 = "1000";
const sc_lv<6> mul1::ap_ST_fsm_state5 = "10000";
const sc_lv<6> mul1::ap_ST_fsm_state6 = "100000";
const sc_lv<32> mul1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> mul1::ap_const_lv32_1 = "1";
const sc_lv<1> mul1::ap_const_lv1_0 = "0";
const sc_lv<32> mul1::ap_const_lv32_2 = "10";
const sc_lv<32> mul1::ap_const_lv32_3 = "11";
const sc_lv<32> mul1::ap_const_lv32_4 = "100";
const sc_lv<3> mul1::ap_const_lv3_0 = "000";
const sc_lv<32> mul1::ap_const_lv32_5 = "101";
const sc_lv<3> mul1::ap_const_lv3_6 = "110";
const sc_lv<3> mul1::ap_const_lv3_1 = "1";
const sc_lv<2> mul1::ap_const_lv2_0 = "00";
const sc_lv<6> mul1::ap_const_lv6_1 = "1";
const sc_lv<6> mul1::ap_const_lv6_2 = "10";
const sc_lv<1> mul1::ap_const_lv1_1 = "1";
const bool mul1::ap_const_boolean_1 = true;

mul1::mul1(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_B_0_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_364_p1 );

    SC_METHOD(thread_B_0_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_1_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_364_p1 );

    SC_METHOD(thread_B_1_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_2_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_364_p1 );

    SC_METHOD(thread_B_2_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_3_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_364_p1 );

    SC_METHOD(thread_B_3_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_4_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_364_p1 );

    SC_METHOD(thread_B_4_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_5_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_364_p1 );

    SC_METHOD(thread_B_5_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_6_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_364_p1 );

    SC_METHOD(thread_B_6_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_B_7_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_1_fu_364_p1 );

    SC_METHOD(thread_B_7_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_C_0_address0);
    sensitive << ( C_0_addr_reg_501 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_0_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_0_d0);
    sensitive << ( C_0_q0 );
    sensitive << ( tmp_5_reg_628 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_0_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_1_address0);
    sensitive << ( C_1_addr_reg_511 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_1_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_1_d0);
    sensitive << ( C_1_q0 );
    sensitive << ( tmp_5_1_reg_633 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_1_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_2_address0);
    sensitive << ( C_2_addr_reg_521 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_2_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_2_d0);
    sensitive << ( C_2_q0 );
    sensitive << ( tmp_5_2_reg_638 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_2_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_3_address0);
    sensitive << ( C_3_addr_reg_531 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_3_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_3_d0);
    sensitive << ( C_3_q0 );
    sensitive << ( tmp_5_3_reg_643 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_3_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_4_address0);
    sensitive << ( C_4_addr_reg_541 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_4_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_4_d0);
    sensitive << ( C_4_q0 );
    sensitive << ( tmp_5_4_reg_648 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_4_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_5_address0);
    sensitive << ( C_5_addr_reg_551 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_5_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_5_d0);
    sensitive << ( C_5_q0 );
    sensitive << ( tmp_5_5_reg_653 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_5_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_6_address0);
    sensitive << ( C_6_addr_reg_561 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_6_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_6_d0);
    sensitive << ( C_6_q0 );
    sensitive << ( tmp_5_6_reg_658 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_6_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_7_address0);
    sensitive << ( C_7_addr_reg_571 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_7_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_7_d0);
    sensitive << ( C_7_q0 );
    sensitive << ( tmp_5_7_reg_663 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_C_7_we0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_304_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_304_p2 );

    SC_METHOD(thread_exitcond1_fu_304_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_293 );

    SC_METHOD(thread_i_1_fu_310_p2);
    sensitive << ( i_reg_293 );

    SC_METHOD(thread_p_shl_cast_fu_328_p1);
    sensitive << ( tmp_3_fu_320_p3 );

    SC_METHOD(thread_sparse_new_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( tmp_4_cast_fu_338_p1 );
    sensitive << ( tmp_8_cast_fu_359_p1 );

    SC_METHOD(thread_sparse_new_address1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_7_cast_fu_349_p1 );

    SC_METHOD(thread_sparse_new_ce0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_sparse_new_ce1);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_tmp_1_fu_364_p1);
    sensitive << ( sparse_new_q1 );

    SC_METHOD(thread_tmp_2_fu_376_p1);
    sensitive << ( sparse_new_q0 );

    SC_METHOD(thread_tmp_3_fu_320_p3);
    sensitive << ( i_reg_293 );

    SC_METHOD(thread_tmp_4_cast_fu_338_p1);
    sensitive << ( tmp_4_fu_332_p2 );

    SC_METHOD(thread_tmp_4_fu_332_p2);
    sensitive << ( p_shl_cast_fu_328_p1 );
    sensitive << ( tmp_cast_fu_316_p1 );

    SC_METHOD(thread_tmp_5_1_fu_392_p2);
    sensitive << ( val_reg_576 );
    sensitive << ( B_1_load_reg_593 );

    SC_METHOD(thread_tmp_5_2_fu_396_p2);
    sensitive << ( val_reg_576 );
    sensitive << ( B_2_load_reg_598 );

    SC_METHOD(thread_tmp_5_3_fu_400_p2);
    sensitive << ( val_reg_576 );
    sensitive << ( B_3_load_reg_603 );

    SC_METHOD(thread_tmp_5_4_fu_404_p2);
    sensitive << ( val_reg_576 );
    sensitive << ( B_4_load_reg_608 );

    SC_METHOD(thread_tmp_5_5_fu_408_p2);
    sensitive << ( val_reg_576 );
    sensitive << ( B_5_load_reg_613 );

    SC_METHOD(thread_tmp_5_6_fu_412_p2);
    sensitive << ( val_reg_576 );
    sensitive << ( B_6_load_reg_618 );

    SC_METHOD(thread_tmp_5_7_fu_416_p2);
    sensitive << ( val_reg_576 );
    sensitive << ( B_7_load_reg_623 );

    SC_METHOD(thread_tmp_5_fu_388_p2);
    sensitive << ( val_reg_576 );
    sensitive << ( B_0_load_reg_588 );

    SC_METHOD(thread_tmp_7_cast_fu_349_p1);
    sensitive << ( tmp_7_fu_343_p2 );

    SC_METHOD(thread_tmp_7_fu_343_p2);
    sensitive << ( tmp_4_fu_332_p2 );

    SC_METHOD(thread_tmp_8_cast_fu_359_p1);
    sensitive << ( tmp_8_fu_354_p2 );

    SC_METHOD(thread_tmp_8_fu_354_p2);
    sensitive << ( tmp_4_reg_476 );

    SC_METHOD(thread_tmp_cast_fu_316_p1);
    sensitive << ( i_reg_293 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( exitcond1_fu_304_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "mul1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, B_0_address0, "(port)B_0_address0");
    sc_trace(mVcdFile, B_0_ce0, "(port)B_0_ce0");
    sc_trace(mVcdFile, B_0_q0, "(port)B_0_q0");
    sc_trace(mVcdFile, B_1_address0, "(port)B_1_address0");
    sc_trace(mVcdFile, B_1_ce0, "(port)B_1_ce0");
    sc_trace(mVcdFile, B_1_q0, "(port)B_1_q0");
    sc_trace(mVcdFile, B_2_address0, "(port)B_2_address0");
    sc_trace(mVcdFile, B_2_ce0, "(port)B_2_ce0");
    sc_trace(mVcdFile, B_2_q0, "(port)B_2_q0");
    sc_trace(mVcdFile, B_3_address0, "(port)B_3_address0");
    sc_trace(mVcdFile, B_3_ce0, "(port)B_3_ce0");
    sc_trace(mVcdFile, B_3_q0, "(port)B_3_q0");
    sc_trace(mVcdFile, B_4_address0, "(port)B_4_address0");
    sc_trace(mVcdFile, B_4_ce0, "(port)B_4_ce0");
    sc_trace(mVcdFile, B_4_q0, "(port)B_4_q0");
    sc_trace(mVcdFile, B_5_address0, "(port)B_5_address0");
    sc_trace(mVcdFile, B_5_ce0, "(port)B_5_ce0");
    sc_trace(mVcdFile, B_5_q0, "(port)B_5_q0");
    sc_trace(mVcdFile, B_6_address0, "(port)B_6_address0");
    sc_trace(mVcdFile, B_6_ce0, "(port)B_6_ce0");
    sc_trace(mVcdFile, B_6_q0, "(port)B_6_q0");
    sc_trace(mVcdFile, B_7_address0, "(port)B_7_address0");
    sc_trace(mVcdFile, B_7_ce0, "(port)B_7_ce0");
    sc_trace(mVcdFile, B_7_q0, "(port)B_7_q0");
    sc_trace(mVcdFile, C_0_address0, "(port)C_0_address0");
    sc_trace(mVcdFile, C_0_ce0, "(port)C_0_ce0");
    sc_trace(mVcdFile, C_0_we0, "(port)C_0_we0");
    sc_trace(mVcdFile, C_0_d0, "(port)C_0_d0");
    sc_trace(mVcdFile, C_0_q0, "(port)C_0_q0");
    sc_trace(mVcdFile, C_1_address0, "(port)C_1_address0");
    sc_trace(mVcdFile, C_1_ce0, "(port)C_1_ce0");
    sc_trace(mVcdFile, C_1_we0, "(port)C_1_we0");
    sc_trace(mVcdFile, C_1_d0, "(port)C_1_d0");
    sc_trace(mVcdFile, C_1_q0, "(port)C_1_q0");
    sc_trace(mVcdFile, C_2_address0, "(port)C_2_address0");
    sc_trace(mVcdFile, C_2_ce0, "(port)C_2_ce0");
    sc_trace(mVcdFile, C_2_we0, "(port)C_2_we0");
    sc_trace(mVcdFile, C_2_d0, "(port)C_2_d0");
    sc_trace(mVcdFile, C_2_q0, "(port)C_2_q0");
    sc_trace(mVcdFile, C_3_address0, "(port)C_3_address0");
    sc_trace(mVcdFile, C_3_ce0, "(port)C_3_ce0");
    sc_trace(mVcdFile, C_3_we0, "(port)C_3_we0");
    sc_trace(mVcdFile, C_3_d0, "(port)C_3_d0");
    sc_trace(mVcdFile, C_3_q0, "(port)C_3_q0");
    sc_trace(mVcdFile, C_4_address0, "(port)C_4_address0");
    sc_trace(mVcdFile, C_4_ce0, "(port)C_4_ce0");
    sc_trace(mVcdFile, C_4_we0, "(port)C_4_we0");
    sc_trace(mVcdFile, C_4_d0, "(port)C_4_d0");
    sc_trace(mVcdFile, C_4_q0, "(port)C_4_q0");
    sc_trace(mVcdFile, C_5_address0, "(port)C_5_address0");
    sc_trace(mVcdFile, C_5_ce0, "(port)C_5_ce0");
    sc_trace(mVcdFile, C_5_we0, "(port)C_5_we0");
    sc_trace(mVcdFile, C_5_d0, "(port)C_5_d0");
    sc_trace(mVcdFile, C_5_q0, "(port)C_5_q0");
    sc_trace(mVcdFile, C_6_address0, "(port)C_6_address0");
    sc_trace(mVcdFile, C_6_ce0, "(port)C_6_ce0");
    sc_trace(mVcdFile, C_6_we0, "(port)C_6_we0");
    sc_trace(mVcdFile, C_6_d0, "(port)C_6_d0");
    sc_trace(mVcdFile, C_6_q0, "(port)C_6_q0");
    sc_trace(mVcdFile, C_7_address0, "(port)C_7_address0");
    sc_trace(mVcdFile, C_7_ce0, "(port)C_7_ce0");
    sc_trace(mVcdFile, C_7_we0, "(port)C_7_we0");
    sc_trace(mVcdFile, C_7_d0, "(port)C_7_d0");
    sc_trace(mVcdFile, C_7_q0, "(port)C_7_q0");
    sc_trace(mVcdFile, sparse_new_address0, "(port)sparse_new_address0");
    sc_trace(mVcdFile, sparse_new_ce0, "(port)sparse_new_ce0");
    sc_trace(mVcdFile, sparse_new_q0, "(port)sparse_new_q0");
    sc_trace(mVcdFile, sparse_new_address1, "(port)sparse_new_address1");
    sc_trace(mVcdFile, sparse_new_ce1, "(port)sparse_new_ce1");
    sc_trace(mVcdFile, sparse_new_q1, "(port)sparse_new_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_1_fu_310_p2, "i_1_fu_310_p2");
    sc_trace(mVcdFile, i_1_reg_471, "i_1_reg_471");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_4_fu_332_p2, "tmp_4_fu_332_p2");
    sc_trace(mVcdFile, tmp_4_reg_476, "tmp_4_reg_476");
    sc_trace(mVcdFile, exitcond1_fu_304_p2, "exitcond1_fu_304_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, C_0_addr_reg_501, "C_0_addr_reg_501");
    sc_trace(mVcdFile, C_1_addr_reg_511, "C_1_addr_reg_511");
    sc_trace(mVcdFile, C_2_addr_reg_521, "C_2_addr_reg_521");
    sc_trace(mVcdFile, C_3_addr_reg_531, "C_3_addr_reg_531");
    sc_trace(mVcdFile, C_4_addr_reg_541, "C_4_addr_reg_541");
    sc_trace(mVcdFile, C_5_addr_reg_551, "C_5_addr_reg_551");
    sc_trace(mVcdFile, C_6_addr_reg_561, "C_6_addr_reg_561");
    sc_trace(mVcdFile, C_7_addr_reg_571, "C_7_addr_reg_571");
    sc_trace(mVcdFile, val_reg_576, "val_reg_576");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, B_0_load_reg_588, "B_0_load_reg_588");
    sc_trace(mVcdFile, B_1_load_reg_593, "B_1_load_reg_593");
    sc_trace(mVcdFile, B_2_load_reg_598, "B_2_load_reg_598");
    sc_trace(mVcdFile, B_3_load_reg_603, "B_3_load_reg_603");
    sc_trace(mVcdFile, B_4_load_reg_608, "B_4_load_reg_608");
    sc_trace(mVcdFile, B_5_load_reg_613, "B_5_load_reg_613");
    sc_trace(mVcdFile, B_6_load_reg_618, "B_6_load_reg_618");
    sc_trace(mVcdFile, B_7_load_reg_623, "B_7_load_reg_623");
    sc_trace(mVcdFile, tmp_5_fu_388_p2, "tmp_5_fu_388_p2");
    sc_trace(mVcdFile, tmp_5_reg_628, "tmp_5_reg_628");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, tmp_5_1_fu_392_p2, "tmp_5_1_fu_392_p2");
    sc_trace(mVcdFile, tmp_5_1_reg_633, "tmp_5_1_reg_633");
    sc_trace(mVcdFile, tmp_5_2_fu_396_p2, "tmp_5_2_fu_396_p2");
    sc_trace(mVcdFile, tmp_5_2_reg_638, "tmp_5_2_reg_638");
    sc_trace(mVcdFile, tmp_5_3_fu_400_p2, "tmp_5_3_fu_400_p2");
    sc_trace(mVcdFile, tmp_5_3_reg_643, "tmp_5_3_reg_643");
    sc_trace(mVcdFile, tmp_5_4_fu_404_p2, "tmp_5_4_fu_404_p2");
    sc_trace(mVcdFile, tmp_5_4_reg_648, "tmp_5_4_reg_648");
    sc_trace(mVcdFile, tmp_5_5_fu_408_p2, "tmp_5_5_fu_408_p2");
    sc_trace(mVcdFile, tmp_5_5_reg_653, "tmp_5_5_reg_653");
    sc_trace(mVcdFile, tmp_5_6_fu_412_p2, "tmp_5_6_fu_412_p2");
    sc_trace(mVcdFile, tmp_5_6_reg_658, "tmp_5_6_reg_658");
    sc_trace(mVcdFile, tmp_5_7_fu_416_p2, "tmp_5_7_fu_416_p2");
    sc_trace(mVcdFile, tmp_5_7_reg_663, "tmp_5_7_reg_663");
    sc_trace(mVcdFile, i_reg_293, "i_reg_293");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, tmp_4_cast_fu_338_p1, "tmp_4_cast_fu_338_p1");
    sc_trace(mVcdFile, tmp_7_cast_fu_349_p1, "tmp_7_cast_fu_349_p1");
    sc_trace(mVcdFile, tmp_8_cast_fu_359_p1, "tmp_8_cast_fu_359_p1");
    sc_trace(mVcdFile, tmp_1_fu_364_p1, "tmp_1_fu_364_p1");
    sc_trace(mVcdFile, tmp_2_fu_376_p1, "tmp_2_fu_376_p1");
    sc_trace(mVcdFile, tmp_3_fu_320_p3, "tmp_3_fu_320_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_328_p1, "p_shl_cast_fu_328_p1");
    sc_trace(mVcdFile, tmp_cast_fu_316_p1, "tmp_cast_fu_316_p1");
    sc_trace(mVcdFile, tmp_7_fu_343_p2, "tmp_7_fu_343_p2");
    sc_trace(mVcdFile, tmp_8_fu_354_p2, "tmp_8_fu_354_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("mul1.hdltvin.dat");
    mHdltvoutHandle.open("mul1.hdltvout.dat");
}

mul1::~mul1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
}

void mul1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_reg_293 = i_1_reg_471.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_reg_293 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        B_0_load_reg_588 = B_0_q0.read();
        B_1_load_reg_593 = B_1_q0.read();
        B_2_load_reg_598 = B_2_q0.read();
        B_3_load_reg_603 = B_3_q0.read();
        B_4_load_reg_608 = B_4_q0.read();
        B_5_load_reg_613 = B_5_q0.read();
        B_6_load_reg_618 = B_6_q0.read();
        B_7_load_reg_623 = B_7_q0.read();
        val_reg_576 = sparse_new_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        C_0_addr_reg_501 =  (sc_lv<3>) (tmp_2_fu_376_p1.read());
        C_1_addr_reg_511 =  (sc_lv<3>) (tmp_2_fu_376_p1.read());
        C_2_addr_reg_521 =  (sc_lv<3>) (tmp_2_fu_376_p1.read());
        C_3_addr_reg_531 =  (sc_lv<3>) (tmp_2_fu_376_p1.read());
        C_4_addr_reg_541 =  (sc_lv<3>) (tmp_2_fu_376_p1.read());
        C_5_addr_reg_551 =  (sc_lv<3>) (tmp_2_fu_376_p1.read());
        C_6_addr_reg_561 =  (sc_lv<3>) (tmp_2_fu_376_p1.read());
        C_7_addr_reg_571 =  (sc_lv<3>) (tmp_2_fu_376_p1.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_1_reg_471 = i_1_fu_310_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_304_p2.read(), ap_const_lv1_0))) {
        tmp_4_reg_476 = tmp_4_fu_332_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_5_1_reg_633 = tmp_5_1_fu_392_p2.read();
        tmp_5_2_reg_638 = tmp_5_2_fu_396_p2.read();
        tmp_5_3_reg_643 = tmp_5_3_fu_400_p2.read();
        tmp_5_4_reg_648 = tmp_5_4_fu_404_p2.read();
        tmp_5_5_reg_653 = tmp_5_5_fu_408_p2.read();
        tmp_5_6_reg_658 = tmp_5_6_fu_412_p2.read();
        tmp_5_7_reg_663 = tmp_5_7_fu_416_p2.read();
        tmp_5_reg_628 = tmp_5_fu_388_p2.read();
    }
}

void mul1::thread_B_0_address0() {
    B_0_address0 =  (sc_lv<3>) (tmp_1_fu_364_p1.read());
}

void mul1::thread_B_0_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_0_ce0 = ap_const_logic_1;
    } else {
        B_0_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_B_1_address0() {
    B_1_address0 =  (sc_lv<3>) (tmp_1_fu_364_p1.read());
}

void mul1::thread_B_1_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_1_ce0 = ap_const_logic_1;
    } else {
        B_1_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_B_2_address0() {
    B_2_address0 =  (sc_lv<3>) (tmp_1_fu_364_p1.read());
}

void mul1::thread_B_2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_2_ce0 = ap_const_logic_1;
    } else {
        B_2_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_B_3_address0() {
    B_3_address0 =  (sc_lv<3>) (tmp_1_fu_364_p1.read());
}

void mul1::thread_B_3_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_3_ce0 = ap_const_logic_1;
    } else {
        B_3_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_B_4_address0() {
    B_4_address0 =  (sc_lv<3>) (tmp_1_fu_364_p1.read());
}

void mul1::thread_B_4_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_4_ce0 = ap_const_logic_1;
    } else {
        B_4_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_B_5_address0() {
    B_5_address0 =  (sc_lv<3>) (tmp_1_fu_364_p1.read());
}

void mul1::thread_B_5_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_5_ce0 = ap_const_logic_1;
    } else {
        B_5_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_B_6_address0() {
    B_6_address0 =  (sc_lv<3>) (tmp_1_fu_364_p1.read());
}

void mul1::thread_B_6_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_6_ce0 = ap_const_logic_1;
    } else {
        B_6_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_B_7_address0() {
    B_7_address0 =  (sc_lv<3>) (tmp_1_fu_364_p1.read());
}

void mul1::thread_B_7_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        B_7_ce0 = ap_const_logic_1;
    } else {
        B_7_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_0_address0() {
    C_0_address0 = C_0_addr_reg_501.read();
}

void mul1::thread_C_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        C_0_ce0 = ap_const_logic_1;
    } else {
        C_0_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_0_d0() {
    C_0_d0 = (!tmp_5_reg_628.read().is_01() || !C_0_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_reg_628.read()) + sc_biguint<32>(C_0_q0.read()));
}

void mul1::thread_C_0_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_0_we0 = ap_const_logic_1;
    } else {
        C_0_we0 = ap_const_logic_0;
    }
}

void mul1::thread_C_1_address0() {
    C_1_address0 = C_1_addr_reg_511.read();
}

void mul1::thread_C_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        C_1_ce0 = ap_const_logic_1;
    } else {
        C_1_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_1_d0() {
    C_1_d0 = (!tmp_5_1_reg_633.read().is_01() || !C_1_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_1_reg_633.read()) + sc_biguint<32>(C_1_q0.read()));
}

void mul1::thread_C_1_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_1_we0 = ap_const_logic_1;
    } else {
        C_1_we0 = ap_const_logic_0;
    }
}

void mul1::thread_C_2_address0() {
    C_2_address0 = C_2_addr_reg_521.read();
}

void mul1::thread_C_2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        C_2_ce0 = ap_const_logic_1;
    } else {
        C_2_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_2_d0() {
    C_2_d0 = (!tmp_5_2_reg_638.read().is_01() || !C_2_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_2_reg_638.read()) + sc_biguint<32>(C_2_q0.read()));
}

void mul1::thread_C_2_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_2_we0 = ap_const_logic_1;
    } else {
        C_2_we0 = ap_const_logic_0;
    }
}

void mul1::thread_C_3_address0() {
    C_3_address0 = C_3_addr_reg_531.read();
}

void mul1::thread_C_3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        C_3_ce0 = ap_const_logic_1;
    } else {
        C_3_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_3_d0() {
    C_3_d0 = (!tmp_5_3_reg_643.read().is_01() || !C_3_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_3_reg_643.read()) + sc_biguint<32>(C_3_q0.read()));
}

void mul1::thread_C_3_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_3_we0 = ap_const_logic_1;
    } else {
        C_3_we0 = ap_const_logic_0;
    }
}

void mul1::thread_C_4_address0() {
    C_4_address0 = C_4_addr_reg_541.read();
}

void mul1::thread_C_4_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        C_4_ce0 = ap_const_logic_1;
    } else {
        C_4_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_4_d0() {
    C_4_d0 = (!tmp_5_4_reg_648.read().is_01() || !C_4_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_4_reg_648.read()) + sc_biguint<32>(C_4_q0.read()));
}

void mul1::thread_C_4_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_4_we0 = ap_const_logic_1;
    } else {
        C_4_we0 = ap_const_logic_0;
    }
}

void mul1::thread_C_5_address0() {
    C_5_address0 = C_5_addr_reg_551.read();
}

void mul1::thread_C_5_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        C_5_ce0 = ap_const_logic_1;
    } else {
        C_5_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_5_d0() {
    C_5_d0 = (!tmp_5_5_reg_653.read().is_01() || !C_5_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_5_reg_653.read()) + sc_biguint<32>(C_5_q0.read()));
}

void mul1::thread_C_5_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_5_we0 = ap_const_logic_1;
    } else {
        C_5_we0 = ap_const_logic_0;
    }
}

void mul1::thread_C_6_address0() {
    C_6_address0 = C_6_addr_reg_561.read();
}

void mul1::thread_C_6_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        C_6_ce0 = ap_const_logic_1;
    } else {
        C_6_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_6_d0() {
    C_6_d0 = (!tmp_5_6_reg_658.read().is_01() || !C_6_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_6_reg_658.read()) + sc_biguint<32>(C_6_q0.read()));
}

void mul1::thread_C_6_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_6_we0 = ap_const_logic_1;
    } else {
        C_6_we0 = ap_const_logic_0;
    }
}

void mul1::thread_C_7_address0() {
    C_7_address0 = C_7_addr_reg_571.read();
}

void mul1::thread_C_7_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        C_7_ce0 = ap_const_logic_1;
    } else {
        C_7_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_C_7_d0() {
    C_7_d0 = (!tmp_5_7_reg_663.read().is_01() || !C_7_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_5_7_reg_663.read()) + sc_biguint<32>(C_7_q0.read()));
}

void mul1::thread_C_7_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        C_7_we0 = ap_const_logic_1;
    } else {
        C_7_we0 = ap_const_logic_0;
    }
}

void mul1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void mul1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void mul1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void mul1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void mul1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void mul1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void mul1::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_304_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void mul1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void mul1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond1_fu_304_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void mul1::thread_exitcond1_fu_304_p2() {
    exitcond1_fu_304_p2 = (!i_reg_293.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_293.read() == ap_const_lv3_6);
}

void mul1::thread_i_1_fu_310_p2() {
    i_1_fu_310_p2 = (!i_reg_293.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_reg_293.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void mul1::thread_p_shl_cast_fu_328_p1() {
    p_shl_cast_fu_328_p1 = esl_zext<6,5>(tmp_3_fu_320_p3.read());
}

void mul1::thread_sparse_new_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sparse_new_address0 =  (sc_lv<5>) (tmp_8_cast_fu_359_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sparse_new_address0 =  (sc_lv<5>) (tmp_4_cast_fu_338_p1.read());
    } else {
        sparse_new_address0 = "XXXXX";
    }
}

void mul1::thread_sparse_new_address1() {
    sparse_new_address1 =  (sc_lv<5>) (tmp_7_cast_fu_349_p1.read());
}

void mul1::thread_sparse_new_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
        sparse_new_ce0 = ap_const_logic_1;
    } else {
        sparse_new_ce0 = ap_const_logic_0;
    }
}

void mul1::thread_sparse_new_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sparse_new_ce1 = ap_const_logic_1;
    } else {
        sparse_new_ce1 = ap_const_logic_0;
    }
}

void mul1::thread_tmp_1_fu_364_p1() {
    tmp_1_fu_364_p1 = esl_sext<64,32>(sparse_new_q1.read());
}

void mul1::thread_tmp_2_fu_376_p1() {
    tmp_2_fu_376_p1 = esl_sext<64,32>(sparse_new_q0.read());
}

void mul1::thread_tmp_3_fu_320_p3() {
    tmp_3_fu_320_p3 = esl_concat<3,2>(i_reg_293.read(), ap_const_lv2_0);
}

void mul1::thread_tmp_4_cast_fu_338_p1() {
    tmp_4_cast_fu_338_p1 = esl_sext<64,6>(tmp_4_fu_332_p2.read());
}

void mul1::thread_tmp_4_fu_332_p2() {
    tmp_4_fu_332_p2 = (!p_shl_cast_fu_328_p1.read().is_01() || !tmp_cast_fu_316_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(p_shl_cast_fu_328_p1.read()) - sc_biguint<6>(tmp_cast_fu_316_p1.read()));
}

void mul1::thread_tmp_5_1_fu_392_p2() {
    tmp_5_1_fu_392_p2 = (!B_1_load_reg_593.read().is_01() || !val_reg_576.read().is_01())? sc_lv<32>(): sc_bigint<32>(B_1_load_reg_593.read()) * sc_bigint<32>(val_reg_576.read());
}

void mul1::thread_tmp_5_2_fu_396_p2() {
    tmp_5_2_fu_396_p2 = (!B_2_load_reg_598.read().is_01() || !val_reg_576.read().is_01())? sc_lv<32>(): sc_bigint<32>(B_2_load_reg_598.read()) * sc_bigint<32>(val_reg_576.read());
}

void mul1::thread_tmp_5_3_fu_400_p2() {
    tmp_5_3_fu_400_p2 = (!B_3_load_reg_603.read().is_01() || !val_reg_576.read().is_01())? sc_lv<32>(): sc_bigint<32>(B_3_load_reg_603.read()) * sc_bigint<32>(val_reg_576.read());
}

void mul1::thread_tmp_5_4_fu_404_p2() {
    tmp_5_4_fu_404_p2 = (!B_4_load_reg_608.read().is_01() || !val_reg_576.read().is_01())? sc_lv<32>(): sc_bigint<32>(B_4_load_reg_608.read()) * sc_bigint<32>(val_reg_576.read());
}

void mul1::thread_tmp_5_5_fu_408_p2() {
    tmp_5_5_fu_408_p2 = (!B_5_load_reg_613.read().is_01() || !val_reg_576.read().is_01())? sc_lv<32>(): sc_bigint<32>(B_5_load_reg_613.read()) * sc_bigint<32>(val_reg_576.read());
}

void mul1::thread_tmp_5_6_fu_412_p2() {
    tmp_5_6_fu_412_p2 = (!B_6_load_reg_618.read().is_01() || !val_reg_576.read().is_01())? sc_lv<32>(): sc_bigint<32>(B_6_load_reg_618.read()) * sc_bigint<32>(val_reg_576.read());
}

void mul1::thread_tmp_5_7_fu_416_p2() {
    tmp_5_7_fu_416_p2 = (!B_7_load_reg_623.read().is_01() || !val_reg_576.read().is_01())? sc_lv<32>(): sc_bigint<32>(B_7_load_reg_623.read()) * sc_bigint<32>(val_reg_576.read());
}

void mul1::thread_tmp_5_fu_388_p2() {
    tmp_5_fu_388_p2 = (!B_0_load_reg_588.read().is_01() || !val_reg_576.read().is_01())? sc_lv<32>(): sc_bigint<32>(B_0_load_reg_588.read()) * sc_bigint<32>(val_reg_576.read());
}

void mul1::thread_tmp_7_cast_fu_349_p1() {
    tmp_7_cast_fu_349_p1 = esl_sext<64,6>(tmp_7_fu_343_p2.read());
}

void mul1::thread_tmp_7_fu_343_p2() {
    tmp_7_fu_343_p2 = (!tmp_4_fu_332_p2.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_bigint<6>(tmp_4_fu_332_p2.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void mul1::thread_tmp_8_cast_fu_359_p1() {
    tmp_8_cast_fu_359_p1 = esl_sext<64,6>(tmp_8_fu_354_p2.read());
}

void mul1::thread_tmp_8_fu_354_p2() {
    tmp_8_fu_354_p2 = (!tmp_4_reg_476.read().is_01() || !ap_const_lv6_2.is_01())? sc_lv<6>(): (sc_bigint<6>(tmp_4_reg_476.read()) + sc_biguint<6>(ap_const_lv6_2));
}

void mul1::thread_tmp_cast_fu_316_p1() {
    tmp_cast_fu_316_p1 = esl_zext<6,3>(i_reg_293.read());
}

void mul1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond1_fu_304_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

void mul1::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_0_address0\" :  \"" << B_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_0_ce0\" :  \"" << B_0_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_0_q0\" :  \"" << B_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_1_address0\" :  \"" << B_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_1_ce0\" :  \"" << B_1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_1_q0\" :  \"" << B_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_2_address0\" :  \"" << B_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_2_ce0\" :  \"" << B_2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_2_q0\" :  \"" << B_2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_3_address0\" :  \"" << B_3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_3_ce0\" :  \"" << B_3_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_3_q0\" :  \"" << B_3_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_4_address0\" :  \"" << B_4_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_4_ce0\" :  \"" << B_4_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_4_q0\" :  \"" << B_4_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_5_address0\" :  \"" << B_5_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_5_ce0\" :  \"" << B_5_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_5_q0\" :  \"" << B_5_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_6_address0\" :  \"" << B_6_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_6_ce0\" :  \"" << B_6_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_6_q0\" :  \"" << B_6_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_7_address0\" :  \"" << B_7_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_7_ce0\" :  \"" << B_7_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_7_q0\" :  \"" << B_7_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_0_address0\" :  \"" << C_0_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_0_ce0\" :  \"" << C_0_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_0_we0\" :  \"" << C_0_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_0_d0\" :  \"" << C_0_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_0_q0\" :  \"" << C_0_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_1_address0\" :  \"" << C_1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_1_ce0\" :  \"" << C_1_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_1_we0\" :  \"" << C_1_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_1_d0\" :  \"" << C_1_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_1_q0\" :  \"" << C_1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_2_address0\" :  \"" << C_2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_2_ce0\" :  \"" << C_2_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_2_we0\" :  \"" << C_2_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_2_d0\" :  \"" << C_2_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_2_q0\" :  \"" << C_2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_3_address0\" :  \"" << C_3_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_3_ce0\" :  \"" << C_3_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_3_we0\" :  \"" << C_3_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_3_d0\" :  \"" << C_3_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_3_q0\" :  \"" << C_3_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_4_address0\" :  \"" << C_4_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_4_ce0\" :  \"" << C_4_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_4_we0\" :  \"" << C_4_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_4_d0\" :  \"" << C_4_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_4_q0\" :  \"" << C_4_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_5_address0\" :  \"" << C_5_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_5_ce0\" :  \"" << C_5_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_5_we0\" :  \"" << C_5_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_5_d0\" :  \"" << C_5_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_5_q0\" :  \"" << C_5_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_6_address0\" :  \"" << C_6_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_6_ce0\" :  \"" << C_6_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_6_we0\" :  \"" << C_6_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_6_d0\" :  \"" << C_6_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_6_q0\" :  \"" << C_6_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_7_address0\" :  \"" << C_7_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_7_ce0\" :  \"" << C_7_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_7_we0\" :  \"" << C_7_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"C_7_d0\" :  \"" << C_7_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"C_7_q0\" :  \"" << C_7_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sparse_new_address0\" :  \"" << sparse_new_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sparse_new_ce0\" :  \"" << sparse_new_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sparse_new_q0\" :  \"" << sparse_new_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sparse_new_address1\" :  \"" << sparse_new_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"sparse_new_ce1\" :  \"" << sparse_new_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"sparse_new_q1\" :  \"" << sparse_new_q1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

